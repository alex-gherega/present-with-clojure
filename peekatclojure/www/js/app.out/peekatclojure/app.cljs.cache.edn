;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name peekatclojure.app, :imports nil, :requires {r reagent.core, reagent.core reagent.core, ajax.core ajax.core}, :uses {transit-request-format ajax.core, text-response-format ajax.core, ajax-request ajax.core, GET ajax.core, text-request-format ajax.core}, :defs {text-code {:name peekatclojure.app/text-code, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :line 9, :column 1, :end-line 9, :end-column 15, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :line 9, :column 6, :end-line 9, :end-column 15}}, text-out {:name peekatclojure.app/text-out, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :line 11, :column 1, :end-line 11, :end-column 14, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :line 11, :column 6, :end-line 11, :end-column 14}}, atom-input {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :line 13, :column 7, :end-line 13, :end-column 17, :arglists (quote ([value]))}, :name peekatclojure.app/atom-input, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :end-column 17, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, do-editor {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([z-var]))}, :name peekatclojure.app/do-editor, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :end-column 16, :method-params ([z-var]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([z-var]))}, do-output {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :line 50, :column 7, :end-line 50, :end-column 16, :arglists (quote ([text]))}, :name peekatclojure.app/do-output, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :end-column 16, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, main {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :line 55, :column 7, :end-line 55, :end-column 11, :arglists (quote ([]))}, :name peekatclojure.app/main, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :line 61, :column 7, :end-line 61, :end-column 11, :arglists (quote ([]))}, :name peekatclojure.app/init, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/peekatclojure/90r/-grrwi1/peekatclojure/app.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:format :get :bottom :button :method :value :response-format :margin-top :width :params :on-click :style :textarea :rows :div :cols :id :code :right :position :uri :on-change :handler :p}, :order [:textarea :value :cols :rows :style :on-change :div :width :p :button :on-click :bottom :right :position :uri :method :format :response-format :handler :params :get :code :id :margin-top]}, :doc nil}