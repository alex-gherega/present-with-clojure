;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name peekatclojure.app, :imports nil, :requires {r reagent.core, reagent.core reagent.core}, :uses nil, :defs {intext {:name peekatclojure.app/intext, :file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :line 5, :column 1, :end-line 5, :end-column 12, :meta {:file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :line 5, :column 6, :end-line 5, :end-column 12}}, atom-input {:protocol-inline nil, :meta {:file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :line 7, :column 7, :end-line 7, :end-column 17, :arglists (quote ([value]))}, :name peekatclojure.app/atom-input, :variadic false, :file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :end-column 17, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, shared-state {:protocol-inline nil, :meta {:file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :line 17, :column 7, :end-line 17, :end-column 19, :arglists (quote ([val]))}, :name peekatclojure.app/shared-state, :variadic false, :file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :end-column 19, :method-params ([val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([val]))}, output-div {:protocol-inline nil, :meta {:file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :line 32, :column 7, :end-line 32, :end-column 17, :arglists (quote ([text]))}, :name peekatclojure.app/output-div, :variadic false, :file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :end-column 17, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, main {:protocol-inline nil, :meta {:file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([]))}, :name peekatclojure.app/main, :variadic false, :file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :line 41, :column 7, :end-line 41, :end-column 11, :arglists (quote ([]))}, :name peekatclojure.app/init, :variadic false, :file "/home/alex/development/programing/clojurescript/peekatclojure/src/cljs/peekatclojure/app.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:button :float :overflow :value :style :textarea :rows :div :cols :on-change :p :height}, :order [:textarea :value :cols :rows :style :on-change :div :p :button :float :height :overflow]}, :doc nil}