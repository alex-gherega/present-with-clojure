;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name peekatclojure.app, :imports nil, :requires {r reagent.core, reagent.core reagent.core, ajax.core ajax.core}, :uses {POST ajax.core, transit-request-format ajax.core, json-request-format ajax.core, raw-response-format ajax.core, params-to-str-alt ajax.core, text-response-format ajax.core, params-to-str ajax.core, ajax-request ajax.core, url-request-format ajax.core, GET ajax.core, text-request-format ajax.core}, :defs {text-code {:name peekatclojure.app/text-code, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 13, :column 1, :end-line 13, :end-column 15, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 13, :column 6, :end-line 13, :end-column 15}}, text-out {:name peekatclojure.app/text-out, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 15, :column 1, :end-line 15, :end-column 14, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 15, :column 6, :end-line 15, :end-column 14}}, atom-input {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 17, :column 7, :end-line 17, :end-column 17, :arglists (quote ([value]))}, :name peekatclojure.app/atom-input, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :end-column 17, :method-params ([value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([value]))}, eval-request {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 28, :column 8, :end-line 28, :end-column 20, :private true, :arglists (quote ([z-var]))}, :private true, :name peekatclojure.app/eval-request, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :end-column 20, :method-params ([z-var]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([z-var]))}, do-editor {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 48, :column 7, :end-line 48, :end-column 16, :arglists (quote ([z-var]))}, :name peekatclojure.app/do-editor, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :end-column 16, :method-params ([z-var]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([z-var]))}, do-output {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 72, :column 7, :end-line 72, :end-column 16, :arglists (quote ([text]))}, :name peekatclojure.app/do-output, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :end-column 16, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, main {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 76, :column 7, :end-line 76, :end-column 11, :arglists (quote ([]))}, :name peekatclojure.app/main, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :line 93, :column 7, :end-line 93, :end-column 11, :arglists (quote ([]))}, :name peekatclojure.app/init, :variadic false, :file "/home/alex/.boot/cache/tmp/home/alex/development/programing/clojurescript/present-with-clojure/peekatclojure/erf/-grrwi1/peekatclojure/app.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:format :get :color :vertical-align :bottom :method :value :response-format :margin-top :width :params :cursor :src :on-click :font :size :style :textarea :rows :div :cols :id :class :padding :code :right :position :uri :on-change :border :border-radius :handler :p :href :img :a :height}, :order [:textarea :value :cols :rows :style :on-change :uri :method :format :response-format :handler :params :get :code :div :width :p :class :on-click :bottom :right :position :padding :border :color :border-radius :cursor :id :margin-top :font :size :a :href :img :src :height :vertical-align]}, :doc nil}